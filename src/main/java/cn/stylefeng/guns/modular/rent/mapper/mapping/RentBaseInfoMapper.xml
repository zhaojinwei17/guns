<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.rent.mapper.RentBaseInfoMapper">
  <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.rent.entity.RentBaseInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="renting_house" jdbcType="VARCHAR" property="rentingHouse" />
    <result column="renting_unit" jdbcType="VARCHAR" property="rentingUnit" />
    <result column="renting_adress" jdbcType="VARCHAR" property="rentingAdress" />
    <result column="tenants_name" jdbcType="VARCHAR" property="tenantsName" />
    <result column="tenants_telephone" jdbcType="VARCHAR" property="tenantsTelephone" />
    <result column="tenants_weixin" jdbcType="VARCHAR" property="tenantsWeixin" />
    <result column="renting_time" jdbcType="TIMESTAMP" property="rentingTime" />
    <result column="renting_price" jdbcType="DECIMAL" property="rentingPrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="memmo" jdbcType="VARCHAR" property="memmo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, renting_house, renting_unit, renting_adress, tenants_name, tenants_telephone, 
    tenants_weixin, renting_time, renting_price, create_time, update_time, update_name, 
    memmo
  </sql>
  <select id="selectByExample" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rent_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rent_base_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rent_base_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfoExample">
    delete from rent_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfo">
    insert into rent_base_info (id, renting_house, renting_unit, 
      renting_adress, tenants_name, tenants_telephone, 
      tenants_weixin, renting_time, renting_price, 
      create_time, update_time, update_name, 
      memmo)
    values (#{id,jdbcType=INTEGER}, #{rentingHouse,jdbcType=VARCHAR}, #{rentingUnit,jdbcType=VARCHAR}, 
      #{rentingAdress,jdbcType=VARCHAR}, #{tenantsName,jdbcType=VARCHAR}, #{tenantsTelephone,jdbcType=VARCHAR}, 
      #{tenantsWeixin,jdbcType=VARCHAR}, #{rentingTime,jdbcType=TIMESTAMP}, #{rentingPrice,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{updateName,jdbcType=VARCHAR}, 
      #{memmo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfo">
    insert into rent_base_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rentingHouse != null">
        renting_house,
      </if>
      <if test="rentingUnit != null">
        renting_unit,
      </if>
      <if test="rentingAdress != null">
        renting_adress,
      </if>
      <if test="tenantsName != null">
        tenants_name,
      </if>
      <if test="tenantsTelephone != null">
        tenants_telephone,
      </if>
      <if test="tenantsWeixin != null">
        tenants_weixin,
      </if>
      <if test="rentingTime != null">
        renting_time,
      </if>
      <if test="rentingPrice != null">
        renting_price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="memmo != null">
        memmo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rentingHouse != null">
        #{rentingHouse,jdbcType=VARCHAR},
      </if>
      <if test="rentingUnit != null">
        #{rentingUnit,jdbcType=VARCHAR},
      </if>
      <if test="rentingAdress != null">
        #{rentingAdress,jdbcType=VARCHAR},
      </if>
      <if test="tenantsName != null">
        #{tenantsName,jdbcType=VARCHAR},
      </if>
      <if test="tenantsTelephone != null">
        #{tenantsTelephone,jdbcType=VARCHAR},
      </if>
      <if test="tenantsWeixin != null">
        #{tenantsWeixin,jdbcType=VARCHAR},
      </if>
      <if test="rentingTime != null">
        #{rentingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentingPrice != null">
        #{rentingPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="memmo != null">
        #{memmo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfoExample" resultType="java.lang.Long">
    select count(*) from rent_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rent_base_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rentingHouse != null">
        renting_house = #{record.rentingHouse,jdbcType=VARCHAR},
      </if>
      <if test="record.rentingUnit != null">
        renting_unit = #{record.rentingUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.rentingAdress != null">
        renting_adress = #{record.rentingAdress,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantsName != null">
        tenants_name = #{record.tenantsName,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantsTelephone != null">
        tenants_telephone = #{record.tenantsTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantsWeixin != null">
        tenants_weixin = #{record.tenantsWeixin,jdbcType=VARCHAR},
      </if>
      <if test="record.rentingTime != null">
        renting_time = #{record.rentingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rentingPrice != null">
        renting_price = #{record.rentingPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateName != null">
        update_name = #{record.updateName,jdbcType=VARCHAR},
      </if>
      <if test="record.memmo != null">
        memmo = #{record.memmo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rent_base_info
    set id = #{record.id,jdbcType=INTEGER},
      renting_house = #{record.rentingHouse,jdbcType=VARCHAR},
      renting_unit = #{record.rentingUnit,jdbcType=VARCHAR},
      renting_adress = #{record.rentingAdress,jdbcType=VARCHAR},
      tenants_name = #{record.tenantsName,jdbcType=VARCHAR},
      tenants_telephone = #{record.tenantsTelephone,jdbcType=VARCHAR},
      tenants_weixin = #{record.tenantsWeixin,jdbcType=VARCHAR},
      renting_time = #{record.rentingTime,jdbcType=TIMESTAMP},
      renting_price = #{record.rentingPrice,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_name = #{record.updateName,jdbcType=VARCHAR},
      memmo = #{record.memmo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfo">
    update rent_base_info
    <set>
      <if test="rentingHouse != null">
        renting_house = #{rentingHouse,jdbcType=VARCHAR},
      </if>
      <if test="rentingUnit != null">
        renting_unit = #{rentingUnit,jdbcType=VARCHAR},
      </if>
      <if test="rentingAdress != null">
        renting_adress = #{rentingAdress,jdbcType=VARCHAR},
      </if>
      <if test="tenantsName != null">
        tenants_name = #{tenantsName,jdbcType=VARCHAR},
      </if>
      <if test="tenantsTelephone != null">
        tenants_telephone = #{tenantsTelephone,jdbcType=VARCHAR},
      </if>
      <if test="tenantsWeixin != null">
        tenants_weixin = #{tenantsWeixin,jdbcType=VARCHAR},
      </if>
      <if test="rentingTime != null">
        renting_time = #{rentingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentingPrice != null">
        renting_price = #{rentingPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="memmo != null">
        memmo = #{memmo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.stylefeng.guns.modular.rent.entity.RentBaseInfo">
    update rent_base_info
    set renting_house = #{rentingHouse,jdbcType=VARCHAR},
      renting_unit = #{rentingUnit,jdbcType=VARCHAR},
      renting_adress = #{rentingAdress,jdbcType=VARCHAR},
      tenants_name = #{tenantsName,jdbcType=VARCHAR},
      tenants_telephone = #{tenantsTelephone,jdbcType=VARCHAR},
      tenants_weixin = #{tenantsWeixin,jdbcType=VARCHAR},
      renting_time = #{rentingTime,jdbcType=TIMESTAMP},
      renting_price = #{rentingPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_name = #{updateName,jdbcType=VARCHAR},
      memmo = #{memmo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>